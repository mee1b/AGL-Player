#include "utilities.h"
#include <QDir>

// ============================================================================
// Утилита: clearTombstone
// ----------------------------------------------------------------------------
// Автоматически очищает директорию плагинов от всех временных файлов,
// созданных при неудачном удалении плагинов (с именами вида *.deleted.*).
// ============================================================================
void Utilities::clearTombstone(const QString& dirName)
{
    // Создаём объект QDir для папки с названием dirName
    QDir pluginsDir(dirName);

    // Получаем список всех файлов в этой папке, имена которых содержат "deleted"
    // QDir::Files — возвращаем только файлы, игнорируем папки
    QStringList tombstone = pluginsDir.entryList(QStringList() << "*deleted*", QDir::Files);

    // Перебираем каждый файл из списка
    for(auto& file : tombstone)
    {
        // Удаляем файл с диска, получая его полный путь через pluginsDir.absoluteFilePath(file)
        QFile::remove(pluginsDir.absoluteFilePath(file));
    }
}

// ============================================================================
// Утилита: clearItems
// ----------------------------------------------------------------------------
// Удаляет элементы из двух QListWidget синхронно по списку имён.
// Важно для корректного обновления UI и внутренних векторов плагинов:
//  - wid и wid2 должны содержать элементы в одинаковом порядке.
//  - names содержит список имён плагинов, которые нужно удалить.
//  - элементы удаляются с конца, чтобы избежать смещения индексов при удалении.
// ============================================================================

void Utilities::clearItems(QListWidget* wid, QListWidget* wid2, const QVector<QString>& names)
{
    // Начинаем с последнего индекса списка имён
    int size = static_cast<int>(names.size()) - 1;

    // Проходим по именам в обратном порядке
    for(const auto& name : names)
    {
        if(size < 0) { break; }

        // Если имя совпадает с элементом в wid на позиции size
        if(name == wid->item(size)->text())
        {
            // Удаляем элементы из обоих QListWidget
            delete wid->item(size);
            delete wid2->item(size);

            // Уменьшаем индекс
            --size;
        }
        //Если не совпадает имя, выходим из цикла. Возможно сделать bool, чтобы обрабатывать результат
        else { break; }
    }
}
